server.contextPath=/
spring.devtools.restart.exclude=static/**,public/**

#debug=true
spring.datasource.url=jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=1234567@
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.user.datasource.driver-class-name=com.mysql.jdbc.Driver


#JPA configuration
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# @EnableResourceServer: Enables a resource server.
# By default this annotation creates a security filter which authenticates requests via an incoming OAuth2 token.
# The filter is an instance of WebSecurityConfigurerAdapter which has an hard-coded order of 3 (Due to some limitations of Spring Framework).
# You need to tell Spring Boot to set OAuth2 request filter order to 3 to align with the hardcoded value. You do that by adding security.oauth2.resource.filter-order = 3 in the application.properties file. Hopefully this will be fixed in future releases
security.oauth2.resource.filter-order=3